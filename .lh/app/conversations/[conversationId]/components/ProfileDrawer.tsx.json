{
    "sourceFile": "app/conversations/[conversationId]/components/ProfileDrawer.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1708608988077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708609021792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,16 +40,19 @@\n     const title=useMemo(()=>{\r\n         return data.name||otherUser.name\r\n     },[data.name,otherUser.name])\r\n \r\n-    const statusText=useMemo(()=>{\r\n+     const { members } = useActiveList();\r\n+  const isActive = members.indexOf(otherUser?.email!) !== -1;\r\n \r\n-        if (data.isGroup){\r\n-        return `${data.users.length} members`\r\n-        }\r\n-        return `Active`\r\n-    },[data])\r\n+  const statusText = useMemo(() => {\r\n+    if (data.isGroup) {\r\n+      return `${data.users.length} members`;\r\n+    }\r\n \r\n+    return isActive ? 'Active' : 'Offline'\r\n+  }, [data, isActive]);\r\n+\r\n const handleClick=useCallback((userId)=>{\r\n        setIsLoading(true)\r\n         axios.post('/api/conversations',{\r\n             userId\r\n"
                },
                {
                    "date": 1708609034575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \r\n     return isActive ? 'Active' : 'Offline'\r\n   }, [data, isActive]);\r\n \r\n-const handleClick=useCallback((userId)=>{\r\n+const handleClick=useCallback((userIdring:st)=>{\r\n        setIsLoading(true)\r\n         axios.post('/api/conversations',{\r\n             userId\r\n         }).then((data)=>{\r\n"
                },
                {
                    "date": 1708609200427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n \r\n     return isActive ? 'Active' : 'Offline'\r\n   }, [data, isActive]);\r\n \r\n-const handleClick=useCallback((userIdring:st)=>{\r\n+const handleClick=useCallback((userId:string)=>{\r\n        setIsLoading(true)\r\n         axios.post('/api/conversations',{\r\n             userId\r\n         }).then((data)=>{\r\n"
                },
                {
                    "date": 1708611354959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                                {data.users.map((user)=>{\r\n+                                {data.users.map((user,index)=>{\r\n                                     return(\r\n                                       <div onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n                                         {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n                                         <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n"
                },
                {
                    "date": 1708611360585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n                                 \"\r\n                               >\r\n                                 {data.users.map((user,index)=>{\r\n                                     return(\r\n-                                      <div onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n+                                      <div key={index} onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n                                         {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n                                         <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n                                          </div>\r\n                                     )\r\n"
                },
                {
                    "date": 1708611918573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         }).then((data)=>{\r\n             router.push(`/conversations/${data.data.id}`)\r\n             setIsLoading(false)\r\n         })\r\n-    },[data,router])\r\n+    },[,router])\r\n \r\n \r\n     return(\r\n \r\n"
                },
                {
                    "date": 1708612685108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n         }).then((data)=>{\r\n             router.push(`/conversations/${data.data.id}`)\r\n             setIsLoading(false)\r\n         })\r\n-    },[,router])\r\n+    },[router])\r\n \r\n \r\n     return(\r\n \r\n@@ -161,16 +161,9 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                                {data.users.map((user,index)=>{\r\n-                                    return(\r\n-                                      <div key={index} onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n-                                        {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n-                                        <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n-                                         </div>\r\n-                                    )\r\n-                                })}\r\n+                               \r\n                                    \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n"
                },
                {
                    "date": 1708612693350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,16 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                               \r\n+                                {data.users.map((user,index)=>{\r\n+                                    return(\r\n+                                      <div key={index} onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n+                                        {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n+                                        <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n+                                         </div>\r\n+                                    )\r\n+                                })}\r\n                                    \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n"
                },
                {
                    "date": 1708612719507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,16 +161,9 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                                {data.users.map((user,index)=>{\r\n-                                    return(\r\n-                                      <div key={index} onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n-                                        {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n-                                        <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n-                                         </div>\r\n-                                    )\r\n-                                })}\r\n+                              user.email\r\n                                    \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n"
                },
                {
                    "date": 1708612724645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,9 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                              user.email\r\n+                              {user.email}\r\n                                    \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n"
                },
                {
                    "date": 1708612754448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,16 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                              {user.email}\r\n+                                {data.users.map((user,index)=>{\r\n+                                    return(\r\n+                                      <div key={index} onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n+                                        {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n+                                        <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n+                                         </div>\r\n+                                    )\r\n+                                })}\r\n                                    \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n"
                },
                {
                    "date": 1708613015063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,16 +161,9 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                                {data.users.map((user,index)=>{\r\n-                                    return(\r\n-                                      <div key={index} onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n-                                        {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n-                                        <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n-                                         </div>\r\n-                                    )\r\n-                                })}\r\n+                                {data.users.map((user) => user.email).join(', ')}\r\n                                    \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n"
                },
                {
                    "date": 1708613024856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,9 +161,16 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                                {data.users.map((user) => user.email).join(', ')}\r\n+                                {data.users.map((user,index)=>{\r\n+                                    return(\r\n+                                      <div key={index} onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n+                                        {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n+                                        <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n+                                         </div>\r\n+                                    )\r\n+                                })}\r\n                                    \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n"
                },
                {
                    "date": 1708613036068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,16 +161,9 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                                {data.users.map((user,index)=>{\r\n-                                    return(\r\n-                                      <div key={index} onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n-                                        {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n-                                        <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n-                                         </div>\r\n-                                    )\r\n-                                })}\r\n+                                {data.users.map((user) => user.email).join(', ')}\r\n                                    \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n"
                },
                {
                    "date": 1708613242851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,44 @@\n-'use client'\r\n-import useOtherUser from '@/app/hooks/useOtherUser'\r\n-import { Conversation,User } from '@prisma/client'\r\n-import {format} from \"date-fns\"\r\n-import { useMemo,Fragment,useState,useCallback } from 'react'\r\n-import {Transition,Dialog} from \"@headlessui/react\"\r\n-import {IoClose, IoTrash} from \"react-icons/io5\"\r\n-import  Avatar from \"@/app/components/sidebar/Avatar\"\r\n-import  AvatarGroup from \"@/app/components/sidebar/AvatarGroup\"\r\n-import  Modal from \"@/app/components/Modal\"\r\n-import ConfirmModal from './ConfirmModal'\r\n-import{useRouter} from \"next/navigation\"\r\n-import axios from 'axios'\r\n-import { useSession } from \"next-auth/react\";\r\n-import LoadingModal from \"@/app/components/LoadingModal\"\r\n+'use client';\r\n+\r\n+import { Fragment, useMemo, useState } from 'react'\r\n+import { Dialog, Transition } from '@headlessui/react'\r\n+import { IoClose, IoTrash } from 'react-icons/io5'\r\n+import { Conversation, User } from '@prisma/client';\r\n+import { format } from 'date-fns';\r\n+\r\n+import useOtherUser from '@/app/hooks/useOtherUser';\r\n import useActiveList from '@/app/hooks/useActiveList';\r\n \r\n-interface ProfileDrawerProps{\r\n-    isOpen:boolean\r\n-    onClose:()=>void\r\n-    data:Conversation & {\r\n-        users:User[]\r\n-    }\r\n+import Avatar from '@/app/components/Avatar';\r\n+import AvatarGroup from '@/app/components/AvatarGroup';\r\n+import ConfirmModal from './ConfirmModal';\r\n \r\n+interface ProfileDrawerProps {\r\n+  isOpen: boolean;\r\n+  onClose: () => void;\r\n+  data: Conversation & {\r\n+    users: User[]\r\n+  }\r\n }\r\n \r\n-const ProfileDrawer:React.FC<ProfileDrawerProps>=({isOpen,onClose,data})=>{\r\n+const ProfileDrawer: React.FC<ProfileDrawerProps> = ({\r\n+  isOpen,\r\n+  onClose,\r\n+  data,\r\n+}) => {\r\n+  const [confirmOpen, setConfirmOpen] = useState(false);\r\n+  const otherUser = useOtherUser(data);\r\n+  \r\n+  const joinedDate = useMemo(() => {\r\n+    return format(new Date(otherUser.createdAt), 'PP');\r\n+  }, [otherUser.createdAt]);\r\n+  \r\n+  const title = useMemo(() => {\r\n+    return data.name || otherUser.name;\r\n+  }, [data.name, otherUser.name]);\r\n \r\n-    const session = useSession();\r\n-    const currentUserEmail = session.data?.user?.email;\r\n-    const otherUser=useOtherUser(data)\r\n-    const[confirmOpen,setConfirmOpen]=useState(false)\r\n-    const [isLoading,setIsLoading]=useState(false)\r\n-    const router=useRouter()\r\n-    const joinedDate=useMemo(()=>{\r\n-        return format(new Date(otherUser.createdAt),'PP')\r\n-    },[otherUser.createdAt])\r\n-\r\n-\r\n-    const title=useMemo(()=>{\r\n-        return data.name||otherUser.name\r\n-    },[data.name,otherUser.name])\r\n-\r\n-     const { members } = useActiveList();\r\n+  const { members } = useActiveList();\r\n   const isActive = members.indexOf(otherUser?.email!) !== -1;\r\n \r\n   const statusText = useMemo(() => {\r\n     if (data.isGroup) {\r\n@@ -51,32 +47,14 @@\n \r\n     return isActive ? 'Active' : 'Offline'\r\n   }, [data, isActive]);\r\n \r\n-const handleClick=useCallback((userId:string)=>{\r\n-       setIsLoading(true)\r\n-        axios.post('/api/conversations',{\r\n-            userId\r\n-        }).then((data)=>{\r\n-            router.push(`/conversations/${data.data.id}`)\r\n-            setIsLoading(false)\r\n-        })\r\n-    },[router])\r\n-\r\n-\r\n-    return(\r\n-\r\n-        <>\r\n-         <ConfirmModal \r\n+  return (\r\n+    <>\r\n+      <ConfirmModal \r\n         isOpen={confirmOpen} \r\n         onClose={() => setConfirmOpen(false)}\r\n       />\r\n-\r\n-      \r\n-        {/* {isLoading && (\r\n-            <LoadingModal/>\r\n-        )} */}\r\n-\r\n       <Transition.Root show={isOpen} as={Fragment}>\r\n         <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n           <Transition.Child\r\n             as={Fragment}\r\n@@ -144,16 +122,16 @@\n                           {data.isGroup && (\r\n                             <div>\r\n                               <dt \r\n                                 className=\"\r\n-                                  text-md\r\n+                                  text-sm \r\n                                   font-medium \r\n                                   text-gray-500 \r\n                                   sm:w-40 \r\n                                   sm:flex-shrink-0\r\n                                 \"\r\n                               >\r\n-                                Group Participants\r\n+                                Emails\r\n                               </dt>\r\n                               <dd \r\n                                 className=\"\r\n                                   mt-1 \r\n@@ -162,13 +140,11 @@\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n                                 {data.users.map((user) => user.email).join(', ')}\r\n-                                   \r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n-                          \r\n                           {!data.isGroup && (\r\n                             <div>\r\n                               <dt \r\n                                 className=\"\r\n@@ -234,9 +210,9 @@\n             </div>\r\n           </div>\r\n         </Dialog>\r\n       </Transition.Root>\r\n-        </>\r\n-    )\r\n+    </>\r\n+  )\r\n }\r\n\\ No newline at end of file\n \r\n-export default ProfileDrawer\n+export default ProfileDrawer;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1708613262765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n \r\n import useOtherUser from '@/app/hooks/useOtherUser';\r\n import useActiveList from '@/app/hooks/useActiveList';\r\n \r\n-import Avatar from '@/app/components/Avatar';\r\n+import Avatar from '@/app/components/sidebar/Avatar';\r\n import AvatarGroup from '@/app/components/AvatarGroup';\r\n import ConfirmModal from './ConfirmModal';\r\n \r\n interface ProfileDrawerProps {\r\n"
                },
                {
                    "date": 1708613575929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n                                   text-gray-900 \r\n                                   sm:col-span-2\r\n                                 \"\r\n                               >\r\n-                                \r\n+                                e\r\n                               </dd>\r\n                             </div>\r\n                           )}\r\n                           {!data.isGroup && (\r\n"
                }
            ],
            "date": 1708608988077,
            "name": "Commit-0",
            "content": "'use client'\r\nimport useOtherUser from '@/app/hooks/useOtherUser'\r\nimport { Conversation,User } from '@prisma/client'\r\nimport {format} from \"date-fns\"\r\nimport { useMemo,Fragment,useState,useCallback } from 'react'\r\nimport {Transition,Dialog} from \"@headlessui/react\"\r\nimport {IoClose, IoTrash} from \"react-icons/io5\"\r\nimport  Avatar from \"@/app/components/sidebar/Avatar\"\r\nimport  AvatarGroup from \"@/app/components/sidebar/AvatarGroup\"\r\nimport  Modal from \"@/app/components/Modal\"\r\nimport ConfirmModal from './ConfirmModal'\r\nimport{useRouter} from \"next/navigation\"\r\nimport axios from 'axios'\r\nimport { useSession } from \"next-auth/react\";\r\nimport LoadingModal from \"@/app/components/LoadingModal\"\r\nimport useActiveList from '@/app/hooks/useActiveList';\r\n\r\ninterface ProfileDrawerProps{\r\n    isOpen:boolean\r\n    onClose:()=>void\r\n    data:Conversation & {\r\n        users:User[]\r\n    }\r\n\r\n}\r\n\r\nconst ProfileDrawer:React.FC<ProfileDrawerProps>=({isOpen,onClose,data})=>{\r\n\r\n    const session = useSession();\r\n    const currentUserEmail = session.data?.user?.email;\r\n    const otherUser=useOtherUser(data)\r\n    const[confirmOpen,setConfirmOpen]=useState(false)\r\n    const [isLoading,setIsLoading]=useState(false)\r\n    const router=useRouter()\r\n    const joinedDate=useMemo(()=>{\r\n        return format(new Date(otherUser.createdAt),'PP')\r\n    },[otherUser.createdAt])\r\n\r\n\r\n    const title=useMemo(()=>{\r\n        return data.name||otherUser.name\r\n    },[data.name,otherUser.name])\r\n\r\n    const statusText=useMemo(()=>{\r\n\r\n        if (data.isGroup){\r\n        return `${data.users.length} members`\r\n        }\r\n        return `Active`\r\n    },[data])\r\n\r\nconst handleClick=useCallback((userId)=>{\r\n       setIsLoading(true)\r\n        axios.post('/api/conversations',{\r\n            userId\r\n        }).then((data)=>{\r\n            router.push(`/conversations/${data.data.id}`)\r\n            setIsLoading(false)\r\n        })\r\n    },[data,router])\r\n\r\n\r\n    return(\r\n\r\n        <>\r\n         <ConfirmModal \r\n        isOpen={confirmOpen} \r\n        onClose={() => setConfirmOpen(false)}\r\n      />\r\n\r\n      \r\n        {/* {isLoading && (\r\n            <LoadingModal/>\r\n        )} */}\r\n\r\n      <Transition.Root show={isOpen} as={Fragment}>\r\n        <Dialog as=\"div\" className=\"relative z-50\" onClose={onClose}>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-500\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-500\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-40\" />\r\n        </Transition.Child>\r\n\r\n          <div className=\"fixed inset-0 overflow-hidden\">\r\n            <div className=\"absolute inset-0 overflow-hidden\">\r\n              <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10\">\r\n                <Transition.Child\r\n                  as={Fragment}\r\n                  enter=\"transform transition ease-in-out duration-500\"\r\n                  enterFrom=\"translate-x-full\"\r\n                  enterTo=\"translate-x-0\"\r\n                  leave=\"transform transition ease-in-out duration-500\"\r\n                  leaveFrom=\"translate-x-0\"\r\n                  leaveTo=\"translate-x-full\"\r\n                >\r\n                  <Dialog.Panel className=\"pointer-events-auto w-screen max-w-md\">\r\n                    <div className=\"flex h-full flex-col overflow-y-scroll bg-white py-6 shadow-xl\">\r\n                      <div className=\"px-4 sm:px-6\">\r\n                        <div className=\"flex items-start justify-end\">\r\n                          <div className=\"ml-3 flex h-7 items-center\">\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2\"\r\n                              onClick={onClose}\r\n                            >\r\n                              <span className=\"sr-only\">Close panel</span>\r\n                              <IoClose size={24} aria-hidden=\"true\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"relative mt-6 flex-1 px-4 sm:px-6\">\r\n                        <div className=\"flex flex-col items-center\">\r\n                          <div className=\"mb-2\">\r\n                            {data.isGroup ? <AvatarGroup users={data.users} /> : <Avatar user={otherUser} />}\r\n                          </div>\r\n                          <div>\r\n                            {title}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500\">\r\n                            {statusText}\r\n                          </div>\r\n                          <div className=\"flex gap-10 my-8\">\r\n                            <div onClick={() => setConfirmOpen(true)} className=\"flex flex-col gap-3 items-center cursor-pointer hover:opacity-75\">\r\n                              <div className=\"w-10 h-10 bg-neutral-100 rounded-full flex items-center justify-center\">\r\n                                <IoTrash size={20} />\r\n                              </div>\r\n                              <div className=\"text-sm font-light text-neutral-600\">\r\n                                Delete\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        <div className=\"w-full pb-5 pt-5 sm:px-0 sm:pt-0\">\r\n                        <dl className=\"space-y-8 px-4 sm:space-y-6 sm:px-6\">\r\n                          {data.isGroup && (\r\n                            <div>\r\n                              <dt \r\n                                className=\"\r\n                                  text-md\r\n                                  font-medium \r\n                                  text-gray-500 \r\n                                  sm:w-40 \r\n                                  sm:flex-shrink-0\r\n                                \"\r\n                              >\r\n                                Group Participants\r\n                              </dt>\r\n                              <dd \r\n                                className=\"\r\n                                  mt-1 \r\n                                  text-sm \r\n                                  text-gray-900 \r\n                                  sm:col-span-2\r\n                                \"\r\n                              >\r\n                                {data.users.map((user)=>{\r\n                                    return(\r\n                                      <div onClick={()=>handleClick(user.id)} className='group border-b-[1px] mb-2 flex cursor-pointer items-center'>\r\n                                        {currentUserEmail!==user.email?(<Avatar user={user}/>):\"\"}\r\n                                        <h2 className=' ml-3 text-gray-400 group-hover:text-gray-500'>{currentUserEmail!==user.email?user.email:\"\"}</h2>\r\n                                         </div>\r\n                                    )\r\n                                })}\r\n                                   \r\n                              </dd>\r\n                            </div>\r\n                          )}\r\n                          \r\n                          {!data.isGroup && (\r\n                            <div>\r\n                              <dt \r\n                                className=\"\r\n                                  text-sm \r\n                                  font-medium \r\n                                  text-gray-500 \r\n                                  sm:w-40 \r\n                                  sm:flex-shrink-0\r\n                                \"\r\n                              >\r\n                                Email\r\n                              </dt>\r\n                              <dd \r\n                                className=\"\r\n                                  mt-1 \r\n                                  text-sm \r\n                                  text-gray-900 \r\n                                  sm:col-span-2\r\n                                \"\r\n                              >\r\n                                {otherUser.email}\r\n                              </dd>\r\n                            </div>\r\n                          )}\r\n                          {!data.isGroup && (\r\n                            <>\r\n                              <hr />\r\n                              <div>\r\n                                <dt \r\n                                  className=\"\r\n                                    text-sm \r\n                                    font-medium \r\n                                    text-gray-500 \r\n                                    sm:w-40 \r\n                                    sm:flex-shrink-0\r\n                                  \"\r\n                                >\r\n                                  Joined\r\n                                </dt>\r\n                                <dd \r\n                                  className=\"\r\n                                    mt-1 \r\n                                    text-sm \r\n                                    text-gray-900 \r\n                                    sm:col-span-2\r\n                                  \"\r\n                                >\r\n                                  <time dateTime={joinedDate}>\r\n                                    {joinedDate}\r\n                                  </time>\r\n                                </dd>\r\n                              </div>\r\n                            </>\r\n                          )}\r\n                        </dl>\r\n                      </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Dialog.Panel>\r\n                </Transition.Child>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n      </Transition.Root>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileDrawer"
        }
    ]
}